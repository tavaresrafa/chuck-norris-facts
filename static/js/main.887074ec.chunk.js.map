{"version":3,"sources":["assets/img/chucknorris_logo.png","context/context.js","services/index.js","styles/colors.js","pages/LandingPage/styles.js","components/Header/styles.js","components/Header/index.jsx","components/Input/styles.js","components/Input/index.jsx","components/Card/styles.js","components/Card/index.jsx","components/ErrorMessage/styles.js","components/ErrorMessage/index.jsx","components/Loading/styles.js","components/Loading/index.jsx","components/Button/styles.js","components/Button/index.jsx","pages/LandingPage/index.jsx","styles/global.js","app/App.js","index.js"],"names":["module","exports","JokeContext","createContext","JokeProvider","children","useState","query","setQuery","jokes","setJokes","jokesToShow","setJokesToShow","randomJoke","setRandomJoke","handleError","setHandleError","isFetching","setIsFetching","showSeeMoreButton","setShowSeeMoreButton","handleDefaultSearch","axios","get","getJokes","then","response","data","result","slice","total","catch","error","status","cleanCardList","Provider","value","addMoreJokes","length","handleRandomSearch","console","log","handleSearchOnEnterPressed","e","keyCode","colors","Container","styled","div","WrapperButtons","ContainerCard","section","header","shakeAnimation","keyframes","Logo","picture","Header","media","srcSet","Image","src","alt","Input","input","placeholder","handleOnKeyDown","handleOnChange","defaultValue","onKeyDown","onChange","Card","blockquote","text","data-testid","ErrorMessage","bounceAnimation","Loading","className","Button","button","handleClick","onClick","LandingPage","context","useContext","target","map","joke","key","id","GlobalStyles","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.887074ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chucknorris_logo.d2080adf.png\";","import React, { createContext, useState } from 'react';\nimport { getJokes, getRandomJoke } from '../services/index';\n\nexport const JokeContext = createContext();\n\nexport const JokeProvider = ({ children }) => {\n  const jokesNumberToShow = 10;\n  const [query, setQuery] = useState('');\n  const [jokes, setJokes] = useState([]);\n  const [jokesToShow, setJokesToShow] = useState([]);\n  const [randomJoke, setRandomJoke] = useState({});\n  const [handleError, setHandleError] = useState();\n  const [isFetching, setIsFetching] = useState(false);\n  const [showSeeMoreButton, setShowSeeMoreButton] = useState(false);\n\n  const handleDefaultSearch = () => {\n    setIsFetching(true);\n       \n    getJokes(query).then((response) => {\n      setJokes(response.data.result);\n      setJokesToShow(response.data.result.slice(0, jokesNumberToShow));\n      setIsFetching(false);\n      setShowSeeMoreButton(true);\n\n      if (response.data.total === 0) {\n        setIsFetching(false);\n        setShowSeeMoreButton(false);\n        setHandleError('There is no such word in the vast universe of Chuck Norris');\n      }\n    })\n    .catch((error) => {\n      if (error.response.status === 400) {\n        setIsFetching(false);\n        setShowSeeMoreButton(false);\n        setHandleError('Your search must be between 3 and 120 characters');\n      }\n    })\n\n    cleanCardList();\n  }\n\n  const handleRandomSearch = () => {\n    setIsFetching(true);\n\n    getRandomJoke().then((response) => {\n      setRandomJoke(response.data);\n      setIsFetching(false);\n    })\n    .catch((error) => console.log(error))\n\n    cleanCardList();\n    setShowSeeMoreButton(false);\n  }\n\n  const handleSearchOnEnterPressed = (e) => {\n    if (e.keyCode === 13) {\n      handleDefaultSearch();\n    }\n  }\n\n  const cleanCardList = () => {\n    setJokes([]);\n    setRandomJoke({});\n    setJokesToShow([]);\n    setHandleError();\n  }\n\n  const addMoreJokes = () => {\n    setJokesToShow(jokes.slice(0, jokesToShow.length + jokesNumberToShow));\n  }\n\n  return (\n    <JokeContext.Provider\n      value={{\n        randomJoke,\n        isFetching,\n        jokesToShow,\n        handleError,\n        showSeeMoreButton,\n        setQuery,\n        setJokes,\n        addMoreJokes,\n        handleRandomSearch,\n        handleDefaultSearch,\n        handleSearchOnEnterPressed,\n      }}\n    >\n      {children}\n    </JokeContext.Provider>\n  )\n}\n","import axios from 'axios';\n\nexport const getJokes = (query) =>  axios.get(`https://api.chucknorris.io/jokes/search?query=${query}`);\n\nexport const getRandomJoke = () => axios.get('https://api.chucknorris.io/jokes/random');","export const colors = {\n    white: '#fff',\n    black: '#000',\n    gray1: '#f9f9f9',\n    gray2: '#d8d8d8',\n    orange: '#f15b23'\n}","import styled from 'styled-components';\nimport { colors } from '../../styles/colors';\n\nexport const Container = styled.div`\n  width: 120rem;\n  background-color: ${colors.white};\n  height: 100%;\n  padding: 1.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (min-width: 768px) {\n    padding-top: 3rem;\n  }\n`;\n\nexport const WrapperButtons = styled.div`\n  display: flex;\n  margin-bottom: 4rem;\n  width: 100%;\n\n  @media (min-width: 576px) {\n    justify-content: center;\n\n    :last-child {\n      margin-top: 4rem;\n    }\n  }\n`;\n\nexport const ContainerCard = styled.section`\n  width: 100%;\n`;\n","import styled, { keyframes } from 'styled-components';\n\nexport const Container = styled.header`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 4rem;\n`;\n\n// Logo Animation\nconst shakeAnimation = keyframes`\n  0% { transform: rotate(0deg); }\n  10% { transform: rotate(1deg); }\n  20% { transform: rotate(0deg); }\n  30% { transform: rotate(-1deg); }\n  40% { transform: rotate(0deg); }\n  50% { transform: rotate(1deg); }\n  60% { transform: rotate(0deg); }\n  70% { transform: rotate(-1deg); }\n  80% { transform: rotate(0deg); }\n  90% { transform: rotate(1deg); }\n  100% { transform: rotate(0deg); }\n`;\n\nexport const Logo = styled.picture`\n  max-width: 100%;\n\n  @media (min-width: 360px) {\n    max-width: 36rem;\n  }\n\n  :hover {\n    animation-name: ${shakeAnimation};\n    animation-duration: 0.4s;\n  }\n`;\n","import React from 'react';\nimport * as S from './styles';\nimport Image from '../../assets/img/chucknorris_logo.png';\n\nconst Header = () => (\n  <S.Container>\n    <S.Logo>\n      <source\n        media=\"(min-width: 800px)\"\n        srcSet={`${Image} 1x, ${Image} 2x`}\n      />\n      <source\n        media=\"(min-width: 400px)\"\n        srcSet={`${Image} 1x, ${Image} 2x`}\n      />\n      <source srcSet={`${Image} 1x, ${Image} 2x`} />\n      <img src={Image} alt=\"Logo do site.\" />\n    </S.Logo>\n  </S.Container>\n)\n\nexport default Header;","import styled from 'styled-components';\nimport { colors } from '../../styles/colors';\n\nexport const Container = styled.section`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 4rem;\n`;\n\nexport const Input = styled.input`\n  background: ${colors.white};\n  border: 1px solid ${colors.gray2};\n  font-size: 1.3rem;\n  padding: 1.2rem;\n  width: 100%;\n  height: 4rem;\n  text-align: center;\n\n  @media (min-width: 576px) {\n    width: 46rem;\n    text-align: left;\n  }\n`;\n","import React from 'react';\nimport * as S from './styles';\n\nconst Input = ({ placeholder, handleOnKeyDown, handleOnChange }) => (\n  <S.Container>\n    <S.Input\n      defaultValue=\"\"\n      placeholder={placeholder}\n      onKeyDown={handleOnKeyDown}\n      onChange={handleOnChange}\n    />\n  </S.Container>\n)\n\nexport default Input;\n","import styled from 'styled-components';\nimport { colors } from '../../styles/colors';\n\nexport const Card = styled.blockquote`\n  text-align: justify;\n  background: ${colors.gray1};\n  border-left: 1rem solid ${colors.orange};\n  padding: 0.5em 1rem;\n  font-size: 1.6rem;\n  margin-bottom: 1.6rem;\n  display: flex;\n  align-items: center;\n  align-self: flex-start;\n  transition: 0.2s ease;\n  max-width: 100%;\n  box-shadow: 1px 1px 3px 0 rgba(0, 0, 0, 0.2);\n\n  :hover {\n    color: ${colors.orange};\n  }\n\n  p {\n    word-wrap: anywhere;\n    width: 100%;\n  }\n`;\n","import React from 'react';\nimport * as S from './styles';\n\nconst Card = ({ text }) => (\n  <S.Card>\n    <p data-testid=\"card\">{text}</p>\n  </S.Card>\n)\n\nexport default Card;\n","import styled from 'styled-components';\nimport { colors } from '../../styles/colors';\n\nexport const ErrorMessage = styled.div`\n  background: ${colors.orange};\n  color: ${colors.white};\n  margin: 0 auto;\n  width: 20rem;\n  font-size: 1.6rem;\n  padding: 15px;\n  box-shadow: 0 0 3px 1px rgba(0,0,0,0.2);\n  border-radius: 5px;\n`;\n","import React from 'react';\nimport * as S from './styles';\n\nconst ErrorMessage = ({ text }) => (\n  <S.ErrorMessage>\n    <p data-testid=\"errormessage\">{text}</p>\n  </S.ErrorMessage>\n)\n\nexport default ErrorMessage;\n","import styled, { keyframes } from 'styled-components';\nimport { colors } from '../../styles/colors';\n\nconst bounceAnimation = keyframes`\n  0%, 80%, 100% {transform: scale(0);}\n  40% {transform: scale(1.0);}\n`;\n\nexport const Loading = styled.div`\n  margin: 100px auto 0;\n  width: 70px;\n  text-align: center;\n\n  > div {\n    width: 18px;\n    height: 18px;\n    background-color: ${colors.orange};\n    border-radius: 100%;\n    display: inline-block;\n    animation: ${bounceAnimation} 1.4s infinite ease-in-out both;\n  }\n\n  .bounce1 {\n    animation-delay: -0.32s;\n  }\n\n  .bounce2 {\n    animation-delay: -0.16s;\n  }\n`;\n","import React from 'react';\nimport * as S from './styles';\n\nconst Loading = () => (\n  <S.Loading>\n    <div data-testid=\"bounce1\" className=\"bounce1\"></div>\n    <div data-testid=\"bounce2\" className=\"bounce2\"></div>\n    <div data-testid=\"bounce3\" className=\"bounce3\"></div>\n  </S.Loading>\n)\n\nexport default Loading;\n","import styled from 'styled-components';\nimport { colors } from '../../styles/colors';\n\nexport const Container = styled.div`\n  width: 100%;\n\n  :not(:last-child) {\n    margin-right: 0.5rem;\n  }\n\n  @media (min-width: 576px) {\n    width: auto;\n  }\n`;\n\nexport const Button = styled.button`\n  background: ${colors.gray2};\n  color: ${colors.black};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid ${colors.gray2};\n  font-size: 1.3rem;\n  padding: 1.2rem;\n  width: 100%;\n  height: 4rem;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n\n  :hover {\n    color: ${colors.white};\n    background: ${colors.orange};\n    border: 1px solid ${colors.orange};\n  }\n`;\n","import React from 'react';\nimport * as S from './styles';\n\nconst Button = ({ text, handleClick }) => (\n  <S.Container>\n    <S.Button data-testid=\"button\" onClick={handleClick}>{text}</S.Button>\n  </S.Container>\n)\n\nexport default Button;\n","import React, { useContext } from 'react';\nimport { JokeContext } from '../../context/context';\nimport * as S from './styles';\nimport Header from '../../components/Header';\nimport Input from '../../components/Input';\nimport Card from '../../components/Card';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport Loading from '../../components/Loading';\nimport Button from '../../components/Button';\n\nconst LandingPage = () => {\n  const context = useContext(JokeContext);\n\n  return (\n    <S.Container>\n      <Header />\n\n      <Input\n        placeholder=\"Type a word to get a joke...\"\n        handleOnKeyDown={context.handleSearchOnEnterPressed}\n        handleOnChange={(e) => {\n          context.setQuery(e.target.value)\n        }}\n      />\n\n      <S.WrapperButtons>\n        <Button handleClick={context.handleDefaultSearch} text=\"Search\" />\n        <Button handleClick={context.handleRandomSearch} text=\"I'm Feeling Chucky\" />\n      </S.WrapperButtons>\n\n      <S.ContainerCard>\n        {context.isFetching && <Loading />}\n\n        {context.jokesToShow.map((joke) => (\n          <Card key={joke.id} text={joke.value} />\n        ))}\n\n        {context.randomJoke.value && <Card text={context.randomJoke.value} />}\n\n        {context.handleError && <ErrorMessage text={context.handleError} />}\n\n        {context.showSeeMoreButton && !context.isFetching && (\n          <S.WrapperButtons>\n            <Button handleClick={context.addMoreJokes} text=\"See More...\" />\n          </S.WrapperButtons>\n        )}\n      </S.ContainerCard>\n    </S.Container>\n  )\n}\n\nexport default LandingPage;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  *,\n  *:before,\n  *:after {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  html {\n    font-size: 62.5%;\n    overflow-y: scroll;\n  }\n\n  html, body, #__next {\n    height: 100vh;\n  }\n\n  body {\n    -webkit-font-smoothing: antialiased;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  }\n\n  #root {\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n  }\n\n  ul {\n    list-style: none;\n  }\n\n  img {\n    display: block;\n    max-width: 100%;\n    height: auto;\n  }\n`;\n\nexport default GlobalStyles;\n","import React from 'react';\nimport LandingPage from '../pages/LandingPage';\nimport { JokeProvider } from '../context/context';\nimport GlobalStyles from '../styles/global';\n\nconst App = () => {\n  return (\n    <JokeProvider>\n      <LandingPage />\n      <GlobalStyles />\n    </JokeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}